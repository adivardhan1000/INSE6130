#!/usr/bin/env python3

import subprocess

try:
	cmd = 'docker --version'
	output = subprocess.check_output(cmd, shell=True).decode()
	#print(output)
	docker_version = output.strip().split()[2].split(',')[0]

	# Check if docker with runc vulnerability is installed
	if docker_version < '18.09.3':
		print(f"Your version of runc is vulnerable.")
		if input("Do you want to upgrade to fix?(y/n)").strip().lower() == "y":

			# upgrade docker to the latest version
			cmd = "yes | sudo apt install apt-transport-https ca-certificates curl software-properties-common && \
				yes | curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -  && \
				yes | sudo add-apt-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable'"
			subprocess.run(cmd, shell=True)
			get_versions = "yes | sudo apt-get update && apt-cache madison docker-ce | awk '{ print $3 }'"
			output = subprocess.check_output(get_versions, shell=True).decode()
			version = ""
			for line in output.split("\n"):
				if '18.09.4' in line:
					version = line
					break
			print(version)
			bump = "VERSION_STRING=" + version + " && yes | sudo apt-get install docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-buildx-plugin docker-compose-plugin"
			subprocess.run(bump, shell=True)
			subprocess.run(cmd, shell=True)
			#print("Docker version upgraded to "+output)
	else:
		print(f"Your version of runc is not vulnerable.")

except subprocess.CalledProcessError as e:
	print("runc is not installed.")
    # Handle non-zero exit status
	print("Error: ", e.output.decode())
